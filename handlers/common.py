from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ContextTypes
from constants import *
from data_utils import load_data, save_data


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    reply_markup = ReplyKeyboardMarkup(
        [["–°–æ—Ç—Ä—É–¥–Ω–∏–∫", "–ù–∞—Å—Ç–∞–≤–Ω–∏–∫"]],
        resize_keyboard=True,
        one_time_keyboard=True
    )

    await update.message.reply_text(
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É —Ä–æ–ª—å:",
        reply_markup=reply_markup
    )
    return CHOOSE_ROLE


async def choose_role(update: Update, context: ContextTypes.DEFAULT_TYPE):
    role = update.message.text.lower()
    context.user_data['role'] = role

    if role == "–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫":
        await update.message.reply_text(
            "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–µ–∂–∏–º—É –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞:",
            reply_markup=ReplyKeyboardMarkup([["üîô –ù–∞–∑–∞–¥"]], resize_keyboard=True, one_time_keyboard=True)
        )
        return ENTER_PASSWORD

    elif role == "—Å–æ—Ç—Ä—É–¥–Ω–∏–∫":
        return await choose_specialty_prompt(update, context, for_employee=True)

    else:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ —Ä–æ–ª–µ–π.")
        return CHOOSE_ROLE


async def choose_specialty_prompt(update: Update, context: ContextTypes.DEFAULT_TYPE, for_employee=True):
    data = load_data()
    specialties = list(data['specialties'].keys())
    reply_markup = ReplyKeyboardMarkup(
        [[spec] for spec in specialties],
        resize_keyboard=True,
        one_time_keyboard=True
    )
    await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å:", reply_markup=reply_markup)
    return CHOOSE_SPECIALTY_EMPLOYEE if for_employee else CHOOSE_SPECIALTY_MENTOR
