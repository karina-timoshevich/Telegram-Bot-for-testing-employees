from telegram import Update, KeyboardButton, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import ContextTypes
from constants import *
from data_utils import load_data, save_data, send_full_report
from .common import start


async def enter_password_mentor(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.strip()
    if text == "üîô –ù–∞–∑–∞–¥":
        context.user_data.clear()
        await update.message.reply_text(
            "–û—Ç–º–µ–Ω–∞ –≤–≤–æ–¥–∞ –ø–∞—Ä–æ–ª—è. –í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –∑–∞–Ω–æ–≤–æ:",
            reply_markup=ReplyKeyboardMarkup(
                [["–£—á–µ–Ω–∏–∫", "–ù–∞—Å—Ç–∞–≤–Ω–∏–∫", "–ê–¥–º–∏–Ω"]],
                resize_keyboard=True,
                one_time_keyboard=True
            )
        )
        return CHOOSE_ROLE

    if text == MENTOR_PASSWORD:
        try:
            await context.bot.delete_message(chat_id=update.effective_chat.id, message_id=update.message.message_id)
        except:
            pass
        return await mentor_menu(update, context)

    else:
        keyboard = ReplyKeyboardMarkup([["üîô –ù–∞–∑–∞–¥"]], resize_keyboard=True, one_time_keyboard=True)
        await update.message.reply_text("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ ¬´üîô –ù–∞–∑–∞–¥¬ª –¥–ª—è –æ—Ç–º–µ–Ω—ã:",
                                        reply_markup=keyboard)
        return ENTER_PASSWORD_MENTOR


async def mentor_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [KeyboardButton("üìö –¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã")],
        [KeyboardButton("üóÇ –£—á–µ–±–Ω—ã–µ –ø–ª–∞–Ω—ã")],
        [KeyboardButton("üß™ –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è")],
        [KeyboardButton("üîô –ù–∞–∑–∞–¥")]
    ]

    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text("–í—ã –≤ –º–µ–Ω—é –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup)
    return MENTOR_MENU


async def handle_mentor_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    choice = update.message.text.strip()
    if choice == "üîô –ù–∞–∑–∞–¥":
        context.user_data.clear()
        await update.message.reply_text(
            "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –∫ –≤—ã–±–æ—Ä—É —Ä–æ–ª–∏.",
            reply_markup=ReplyKeyboardMarkup(
                [["–£—á–µ–Ω–∏–∫", "–ù–∞—Å—Ç–∞–≤–Ω–∏–∫", "–ê–¥–º–∏–Ω"]],
                resize_keyboard=True,
                one_time_keyboard=True
            )
        )
        return CHOOSE_ROLE
    elif choice == "üìö –¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã":
        file_path = "mentor_content/theory.txt"
    elif choice == "üóÇ –£—á–µ–±–Ω—ã–µ –ø–ª–∞–Ω—ã":
        file_path = "mentor_content/plans.txt"
    elif choice == "üß™ –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è":
        file_path = "mentor_content/practice.txt"
    else:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –∏–∑ –º–µ–Ω—é.")
        return MENTOR_MENU
